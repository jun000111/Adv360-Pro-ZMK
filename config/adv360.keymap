#include <dt-bindings/zmk/stp.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        noSaveQuit: noSaveQuit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp COLON &kp Q &kp EXCL &kp ENTER>;
            label = "NOSAVEQUIT";
        };

        saveQuit: saveQuit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp COLON &kp W &kp Q &kp ENTER>;
            label = "SAVEQUIT";
        };

        #endif

        hmr: homerow_mods_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <165>;
            quick_tap_ms = <100>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <15 16 17 18 19 29 30 31 32 33 47 48 49 50 51 14 28 46 60 61 62 63 64 34 20 6 5 4 3 2 1 0 65 66 35 36 52 67>;
            retro-tap;
            require-prior-idle-ms = <(-1)>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            #binding-cells = <2>;
            tapping-term-ms = <165>;
            quick_tap_ms = <100>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <22 23 24 25 26 40 41 42 43 44 54 55 56 57 58 9 8 7 21 39 37 38 53 68 69 70 10 11 12 13 24 25 26 27 44 45 54 55 56 57 58 59 71 72 73 74 75>;
            retro-tap;
            require-prior-idle-ms = <(-1)>;
        };

        numMod: numMod {
            compatible = "zmk,behavior-hold-tap";
            label = "NUMMOD";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;

            hold-trigger-key-positions = <23 24 25 41 42 43 55 56 57 70 71 72 73 10 9 11 12 26 44 58>;
            retro-tap;
        };

        symbolMod: symbolMod {
            compatible = "zmk,behavior-hold-tap";
            label = "SYMBOLMOD";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;

            hold-trigger-key-positions = <14 15 16 17 18 19 28 29 30 31 32 33 46 47 48 49 50 51 60 61 62 63 64 65 66 51 65 66 41 42 43 44 55 56>;
            require-prior-idle-ms = <10>;
            retro-tap;
        };

        copyMod: copyMod {
            compatible = "zmk,behavior-hold-tap";
            label = "COPYMOD";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&kp>;

            hold-trigger-key-positions = <47 48 49 50 31 63 64>;
        };

        mouse: mouse {
            compatible = "zmk,behavior-hold-tap";
            label = "MOUSE";
            #binding-cells = <2>;
            tapping-term-ms = <179>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;

            hold-trigger-key-positions = <17 30 31 32>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&noSaveQuit  &kp N1           &kp N2           &kp N3        &kp N4             &kp N5  &mo 7                                                                            &mo 7               &kp N6  &kp N7              &kp N8        &kp N9            &kp N0            &saveQuit
&kp TAB      &kp Q            &kp W            &kp F         &kp P              &kp B   &none                                                                            &none               &kp J   &kp L               &kp U         &kp Y             &kp SEMICOLON     &kp BSLH
&kp ESC      &hml LEFT_GUI A  &hml LEFT_ALT R  &hml LCTRL S  &hml LEFT_SHIFT T  &kp G   &none                 &kp LCTRL         &kp LALT      &kp LGUI   &kp RCTRL       &none               &kp M   &hmr RIGHT_SHIFT N  &hmr RCTRL E  &hmr RIGHT_ALT I  &hmr RIGHT_GUI O  &kp SQT
&sk LSHFT    &kp Z            &kp X            &kp C         &kp D              &kp V                                           &kp HOME      &kp PG_UP                                      &kp K   &kp H               &kp COMMA     &kp DOT           &kp FSLH          &sk RSHFT
&mo 5        &kp GRAVE        &kp CAPS         &kp LEFT      &kp RIGHT                  &copyMod 3 BACKSPACE  &numMod 2 DELETE  &kp END       &kp PG_DN  &mouse 4 ENTER  &symbolMod 1 SPACE          &kp UP              &kp DOWN      &kp LBKT          &kp RBKT          &mo 6
            >;
        };

        SYMBOL {
            bindings = <
&kp GRAVE        &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp PERIOD    &trans                                              &trans  &trans  &trans         &trans       &trans     &trans     &trans
&kp EXCLAMATION  &kp COMMA         &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SEMICOLON      &kp QUESTION  &trans                                              &trans  &trans  &trans         &trans       &trans     &trans     &trans
&kp HASH         &kp CARET         &kp EQUAL             &kp UNDERSCORE         &kp DOLLAR         &kp ASTERISK  &trans       &trans     &trans      &trans  &trans  &trans  &trans  &kp BACKSPACE  &kp TAB      &kp SPACE  &kp ENTER  &trans
&kp TILDE        &kp LESS_THAN     &kp PIPE              &kp MINUS              &kp GREATER_THAN   &kp SLASH                             &trans      &trans                  &trans  &kp DELETE     &kp LS(TAB)  &trans     &trans     &trans
&none            &kp AMPERSAND     &kp SINGLE_QUOTE      &kp DOUBLE_QUOTES      &kp PLUS                         &kp PERCENT  &kp COLON  &kp AT      &trans  &trans  &trans          &trans         &trans       &trans     &trans     &trans
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 0   &kp N6  &kp KP_NUM    &kp EQUAL     &kp SLASH     &kp ASTERISK  &kp MINUS
&kp TAB    &trans     &trans    &trans    &trans     &trans  &none                                                    &none   &trans  &kp N7        &kp N8        &kp N9        &kp MINUS     &kp BSLH
&kp ESC    &trans     &trans    &trans    &trans     &trans  &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none   &trans  &kp NUMBER_4  &kp N5        &kp N6        &kp PLUS      &kp SQT
&kp LSHFT  &trans     &trans    &trans    &trans     &trans                       &kp HOME      &kp PG_UP                     &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ENTER     &kp RSHFT
&mo 0      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp N0          &kp UP        &kp DOWN      &kp DOT       &kp RBKT      &mo 0
            >;
        };

        CP {
            bindings = <
&none  &none      &none      &none          &none          &none  &none                                  &none  &none  &none  &none  &none  &none  &none
&none  &none      &none      &none          &none          &none  &none                                  &none  &none  &none  &none  &none  &none  &none
&none  &none      &none      &kp LA(TAB)    &none          &none  &none  &none  &none      &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &kp LC(Z)  &kp LC(X)  &kp LC(C)      &kp LC(V)      &none                &none      &none                &none  &none  &none  &none  &none  &none
&none  &none      &none      &kp LC(LS(C))  &kp LS(LC(V))         &none  &none  &none      &none  &none  &none         &none  &none  &none  &none  &none
            >;
        };

        mouse {
            bindings = <
&trans  &trans          &trans          &trans          &trans           &trans  &trans                                               &trans  &trans  &trans     &trans     &trans  &trans  &trans
&trans  &msc SCRL_UP    &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &none   &trans                                               &trans  &trans  &trans     &trans     &trans  &trans  &trans
&trans  &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none   &trans     &trans     &trans         &trans  &trans  &trans  &trans  &mkp LCLK  &mkp RCLK  &trans  &trans  &trans
&trans  &kp LC(Z)       &kp LC(X)       &kp LC(C)       &kp LC(V)        &none                         &trans         &trans                  &trans  &trans     &trans     &trans  &trans  &trans
&trans  &trans          &none           &kp LC(LS(C))   &kp LS(LC(V))            &mkp LCLK  &mkp RCLK  &mkp MCLK      &trans  &trans  &trans          &trans     &trans     &trans  &trans  &trans
            >;
        };

        fn {
            bindings = <
&none  &none  &none  &none  &none  &none  &none                                                         &none         &none      &kp F10                   &kp F11               &kp F12               &none                     &none
&none  &none  &none  &none  &none  &none  &none                                                         &none         &none      &kp F7                    &kp F8                &kp F9                &none                     &none
&none  &none  &none  &none  &none  &none  &none  &none  &none      &kp C_PREV        &kp C_NEXT         &none         &kp K_WWW  &kp F4                    &kp F5                &kp F6                &none                     &none
&none  &none  &none  &none  &none  &none                &none      &kp C_MUTE                                         &none      &kp F1                    &kp F2                &kp F3                &none                     &none
&none  &none  &none  &none  &none         &none  &none  &none      &kp C_PLAY_PAUSE  &kp C_VOLUME_DOWN  &kp C_VOL_UP             &kp C_BRIGHTNESS_MAXIMUM  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_BRIGHTNESS_MINIMUM  &none
            >;
        };

        System {
            bindings = <
&trans  &trans  &trans  &trans               &trans           &trans  &none                                                        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans               &trans           &trans  &none                                                        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &kp LG(PRINTSCREEN)  &kp PRINTSCREEN  &trans  &none           &kp LG(L)     &kp LG(X)      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans               &trans           &trans                                &none          &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans               &trans                   &kp SCROLLLOCK  &kp CAPSLOCK  &none          &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
